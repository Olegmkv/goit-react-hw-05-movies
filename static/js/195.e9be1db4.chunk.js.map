{"version":3,"file":"static/js/195.e9be1db4.chunk.js","mappings":"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","sources":["api.js","components/MoviesList/MoviesList.jsx","components/MoviesFilter/MoviesFilter.jsx","pages/MoviesPage.js"],"sourcesContent":["import axios from \"axios\";\n\nconst URL = \"https://api.themoviedb.org/3/\"\nconst params = new URLSearchParams({\n    api_key: 'fbaf0d2e5045632a4f9c1a9b28b2fdb1',\n    language: 'en-US',\n});\nconst paramsQuery = new URLSearchParams({\n    api_key: 'fbaf0d2e5045632a4f9c1a9b28b2fdb1',\n    language: 'en-US',\n    include_adult: false,\n    query: '',\n});\n\n  \n//список найпопулярніших фільмів на сьогодні\nexport const fetchTrending = async () => {\n  const response = await axios.get(`${URL}trending/movie/day?${params}`);\n  return response.data;\n};\n\n//пошук фільму за ключовим словом на сторінці фільмів\n//https://api.themoviedb.org/3/search/movie?query=cat&include_adult=false&language=en-US\nexport const fetchFind = async (query) => {\n  paramsQuery.set('query', query)\n  const response = await axios.get(`${URL}search/movie?${paramsQuery}`);\n  return response.data;\n};\n\n//запит повної інформації про фільм для сторінки кінофільму\n//https://api.themoviedb.org/3/movie/1147292?language=en-US\nexport const fetchMovie = async (id) => {\n  const response = await axios.get(`${URL}movie/${id}?${params}`);\n  return response.data;\n};\n\n//запит інформації про акторський склад для сторінки кінофільму\n//https://api.themoviedb.org/3/movie/1147292/credits?language=en-US\nexport const fetchCredits = async (id) => {\n  const response = await axios.get(`${URL}movie/${id}/credits?${params}`);\n  return response.data;\n};\n\n//запит оглядів для сторінки кінофільму\n//https://api.themoviedb.org/3/movie/424/reviews?language=en-US&page=1\nexport const fetchReviews = async (id) => {\n  const response = await axios.get(`${URL}movie/${id}/reviews?${params}`);\n  return response.data;\n};\n","import React from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    const backLink = { from: location.pathname + location.search }\n\n    return (\n        <ul>\n            {movies.map(item =>\n                <li key={item.id}>\n                    <Link to={`/movies/${item.id}`} state={backLink} >\n                        {item.title}\n                    </Link>\n                </li>\n            )}\n        </ul>\n    )\n}","import React from \"react\";\n\nexport const MoviesFilter = ({ handleFilterMovie }) => {\n    return (\n        <form onSubmit={handleFilterMovie}>\n            <input type=\"text\" name=\"findMovie\" />\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}","import { fetchFind} from \"api\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { MoviesFilter } from \"components/MoviesFilter/MoviesFilter\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\n\n\nexport default function MoviesPage() {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const initQuery = searchParams.get(\"query\")??'' \n  \n  const [filter, setFilter] = useState(initQuery);\n  const [movies, setMovies] = useState(null);\n\n  \n  useEffect(() => {\n    async function getMovies() {\n      try {\n        if (filter === '') {\n          return\n        }\n        const moviesFind = await fetchFind(filter);\n        setMovies(moviesFind.results)\n      }catch (error){}\n    }\n    getMovies();  \n  }, [filter])\n\n\n  \n  const handleFilterMovie = (evt) => {\n    evt.preventDefault()\n    const filterMovie = evt.target.findMovie.value\n    if (!filterMovie) {\n      return\n    }\n    setFilter(filterMovie);\n    setSearchParams({ query: filterMovie})\n  };  \n    return (\n<>\n <MoviesFilter handleFilterMovie={handleFilterMovie}  />          \n        {/* {movies && <MoviesList movies={movies} />} */}\n        {movies&&<MoviesList movies={movies} state={{ from: `${location.pathname}${location.search}`}} />}\n</>\n      )\n};\n    \n"],"names":["URL","params","URLSearchParams","api_key","language","paramsQuery","include_adult","query","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","stop","apply","arguments","fetchFind","_ref2","_callee2","_context2","set","_x","fetchMovie","_ref3","_callee3","id","_context3","_x2","fetchCredits","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","MoviesList","movies","location","useLocation","backLink","from","pathname","search","_jsx","children","map","item","Link","to","state","title","MoviesFilter","handleFilterMovie","_jsxs","onSubmit","type","name","MoviesPage","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","initQuery","get","_useState","useState","_useState2","filter","setFilter","_useState3","_useState4","setMovies","useEffect","_getMovies","moviesFind","results","t0","getMovies","_Fragment","evt","preventDefault","filterMovie","target","findMovie","value"],"sourceRoot":""}